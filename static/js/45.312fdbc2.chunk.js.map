{"version":3,"sources":["views/notifications/alerts/Alerts.js"],"names":["Alerts","React","useState","visible","setVisible","xs","md","className","href","rel","target","color","closeButton","show","onShowChange","striped","value","Number","size","onClick"],"mappings":"2NAmLeA,UAtKA,WAAO,IAAD,EACWC,IAAMC,SAAS,IAD1B,mBACZC,EADY,KACHC,EADG,KAGnB,OACE,oCACE,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,KACf,kBAAC,IAAD,KACE,kBAAC,IAAD,cAEE,yBAAKC,UAAU,uBACb,uBAAGC,KAAK,8CAA8CC,IAAI,sBAAsBC,OAAO,SAASH,UAAU,sBACxG,2BAAOA,UAAU,cAAjB,WAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQI,MAAM,WAAd,gDAGA,kBAAC,IAAD,CAAQA,MAAM,aAAd,kDAGA,kBAAC,IAAD,CAAQA,MAAM,WAAd,gDAGA,kBAAC,IAAD,CAAQA,MAAM,UAAd,+CAGA,kBAAC,IAAD,CAAQA,MAAM,WAAd,gDAGA,kBAAC,IAAD,CAAQA,MAAM,QAAd,6CAGA,kBAAC,IAAD,CAAQA,MAAM,SAAd,8CAGA,kBAAC,IAAD,CAAQA,MAAM,QAAd,gDAMN,kBAAC,IAAD,CAAMN,GAAG,KAAKC,GAAG,KACf,kBAAC,IAAD,KACE,kBAAC,IAAD,cAEE,uCAAY,6CAAZ,sBAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQK,MAAM,WAAd,mCAGE,kBAAC,KAAD,CAAOJ,UAAU,cAAjB,mBAHF,kCAMA,kBAAC,IAAD,CAAQI,MAAM,aAAd,qCAGE,kBAAC,KAAD,CAAOJ,UAAU,cAAjB,mBAHF,kCAMA,kBAAC,IAAD,CAAQI,MAAM,WAAd,mCAGE,kBAAC,KAAD,CAAOJ,UAAU,cAAjB,mBAHF,kCAMA,kBAAC,IAAD,CAAQI,MAAM,UAAd,kCAGE,kBAAC,KAAD,CAAOJ,UAAU,cAAjB,mBAHF,kCAMA,kBAAC,IAAD,CAAQI,MAAM,WAAd,mCAGE,kBAAC,KAAD,CAAOJ,UAAU,cAAjB,mBAHF,kCAMA,kBAAC,IAAD,CAAQI,MAAM,QAAd,gCAGE,kBAAC,KAAD,CAAOJ,UAAU,cAAjB,mBAHF,kCAMA,kBAAC,IAAD,CAAQI,MAAM,SAAd,iCAGE,kBAAC,KAAD,CAAOJ,UAAU,cAAjB,mBAHF,kCAMA,kBAAC,IAAD,CAAQI,MAAM,QAAd,gCAGE,kBAAC,KAAD,CAAOJ,UAAU,cAAjB,mBAHF,sCAUR,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMF,GAAG,KAAKC,GAAG,KACf,kBAAC,IAAD,KACE,kBAAC,IAAD,cAEE,uDAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQK,MAAM,WACZ,wBAAIJ,UAAU,iBAAd,cACA,4NAKA,6BACA,uBAAGA,UAAU,QAAb,2FAOR,kBAAC,IAAD,CAAMF,GAAG,KAAKC,GAAG,KACf,kBAAC,IAAD,KACE,kBAAC,IAAD,cAEE,+CAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEK,MAAM,OACNC,aAAW,GAFb,8BAMA,kBAAC,IAAD,CACED,MAAM,UACNE,KAAMV,EACNS,aAAW,EACXE,aAAcV,GAJhB,uBAMuBD,EANvB,YAOE,kBAAC,KAAD,CACEY,SAAO,EACPJ,MAAM,UACNK,MAAyB,GAAlBC,OAAOd,GACde,KAAK,KACLX,UAAU,UAId,kBAAC,IAAD,CAASY,QAAS,kBAAMf,EAAW,MAAnC","file":"static/js/45.312fdbc2.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  CAlert,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CLink,\r\n  CProgress,\r\n  CRow\r\n} from '@coreui/react'\r\n\r\nconst Alerts = () => {\r\n  const [visible, setVisible] = React.useState(10)\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol xs=\"12\" md=\"6\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Alerts\r\n              <div className=\"card-header-actions\">\r\n                <a href=\"https://coreui.github.io/components/alerts/\" rel=\"noreferrer noopener\" target=\"_blank\" className=\"card-header-action\">\r\n                  <small className=\"text-muted\">docs</small>\r\n                </a>\r\n              </div>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CAlert color=\"primary\">\r\n                This is a primary alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"secondary\">\r\n                This is a secondary alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"success\">\r\n                This is a success alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"danger\">\r\n                This is a danger alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"warning\">\r\n                This is a warning alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"info\">\r\n                This is a info alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"light\">\r\n                This is a light alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"dark\">\r\n                This is a dark alert — check it out!\r\n              </CAlert>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol xs=\"12\" md=\"6\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Alerts\r\n              <small> use <code>.alert-link</code> to provide links</small>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CAlert color=\"primary\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a primary alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"secondary\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a secondary alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"success\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a success alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"danger\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a danger alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"warning\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a warning alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"info\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a info alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"light\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a light alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"dark\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a dark alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol xs=\"12\" md=\"6\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Alerts\r\n              <small> additional content</small>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CAlert color=\"success\">\r\n                <h4 className=\"alert-heading\">Well done!</h4>\r\n                <p>\r\n                  Aww yeah, you successfully read this important alert message. This example text is going\r\n                  to run a bit longer so that you can see how spacing within an alert works with this kind\r\n                  of content.\r\n                </p>\r\n                <hr />\r\n                <p className=\"mb-0\">\r\n                  Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\r\n                </p>\r\n              </CAlert>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol xs=\"12\" md=\"6\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Alerts\r\n              <small> dismissing</small>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CAlert\r\n                color=\"info\"\r\n                closeButton\r\n              >\r\n                I am an dismissible alert!\r\n              </CAlert>\r\n              <CAlert\r\n                color=\"warning\"\r\n                show={visible}\r\n                closeButton\r\n                onShowChange={setVisible}\r\n              >\r\n                I will be closed in {visible} seconds!\r\n                <CProgress\r\n                  striped\r\n                  color=\"warning\"\r\n                  value={Number(visible) * 10}\r\n                  size=\"xs\"\r\n                  className=\"mb-3\"\r\n                />\r\n              </CAlert>\r\n\r\n              <CButton onClick={() => setVisible(10)}>\r\n                Reset timer\r\n              </CButton>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Alerts\r\n"],"sourceRoot":""}