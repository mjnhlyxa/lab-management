{"version":3,"sources":["views/pages/login/Login.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["mapDispatchToProps","login","connect","loading","user","loginState","history","useState","username","setUsername","password","setPassword","useEffect","RESPONSE_STATE","SUCCESSS","sessionStorage","setItem","push","className","md","name","type","placeholder","autoComplete","onChange","e","value","target","disabled","xs","color","onClick","style","width","to","active","tabIndex","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","length","err","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/19.72890399.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardGroup,\r\n    CCol,\r\n    CContainer,\r\n    CForm,\r\n    CInput,\r\n    CInputGroup,\r\n    CInputGroupPrepend,\r\n    CInputGroupText,\r\n    CRow,\r\n} from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react';\r\n\r\nimport { login } from 'actions/actions';\r\nimport { RESPONSE_STATE } from 'utils/constants';\r\n\r\nconst Login = ({ loading, login, loginState, history, user }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (loginState === RESPONSE_STATE.SUCCESSS && user) {\r\n            sessionStorage.setItem('token', 1232131231312);\r\n            history.push('/');\r\n        }\r\n    }, [loginState, user]);\r\n\r\n    const onInputUsername = (e) => {\r\n        const value = e.target.value;\r\n        setUsername(value);\r\n    };\r\n\r\n    const onInputPassword = (e) => {\r\n        const value = e.target.value;\r\n        setPassword(value);\r\n    };\r\n\r\n    const submit = () => {\r\n        login({\r\n            user: username,\r\n            password,\r\n        });\r\n    };\r\n\r\n    const x = \"it's me\"\r\n\r\n    return (\r\n        <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n            <CContainer>\r\n                <CRow className=\"justify-content-center\">\r\n                    <CCol md=\"8\">\r\n                        <CCardGroup>\r\n                            <CCard className=\"p-4\">\r\n                                <CCardBody>\r\n                                    <CForm>\r\n                                        <h1>Login</h1>\r\n                                        <p className=\"text-muted\">Sign In to your account</p>\r\n                                        <CInputGroup className=\"mb-3\">\r\n                                            <CInputGroupPrepend>\r\n                                                <CInputGroupText>\r\n                                                    <CIcon name=\"cil-user\" />\r\n                                                </CInputGroupText>\r\n                                            </CInputGroupPrepend>\r\n                                            <CInput\r\n                                                type=\"text\"\r\n                                                placeholder=\"Username\"\r\n                                                autoComplete=\"username\"\r\n                                                onChange={onInputUsername}\r\n                                                disabled={loading}\r\n                                            />\r\n                                        </CInputGroup>\r\n                                        <CInputGroup className=\"mb-4\">\r\n                                            <CInputGroupPrepend>\r\n                                                <CInputGroupText>\r\n                                                    <CIcon name=\"cil-lock-locked\" />\r\n                                                </CInputGroupText>\r\n                                            </CInputGroupPrepend>\r\n                                            <CInput\r\n                                                type=\"password\"\r\n                                                placeholder=\"Password\"\r\n                                                autoComplete=\"current-password\"\r\n                                                onChange={onInputPassword}\r\n                                                disabled={loading}\r\n                                            />\r\n                                        </CInputGroup>\r\n                                        <CRow>\r\n                                            <CCol xs=\"6\">\r\n                                                <CButton color=\"primary\" className=\"px-4\" onClick={submit}>\r\n                                                    Login\r\n                                                </CButton>\r\n                                            </CCol>\r\n                                            <CCol xs=\"6\" className=\"text-right\">\r\n                                                <CButton color=\"link\" className=\"px-0\">\r\n                                                    Forgot password?\r\n                                                </CButton>\r\n                                            </CCol>\r\n                                        </CRow>\r\n                                    </CForm>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                            <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\r\n                                <CCardBody className=\"text-center\">\r\n                                    <div>\r\n                                        <h2>Sign up</h2>\r\n                                        <p>\r\n                                            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\r\n                                            tempor incididunt ut labore et dolore magna aliqua.\r\n                                        </p>\r\n                                        <Link to=\"/register\">\r\n                                            <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>\r\n                                                Register Now!\r\n                                            </CButton>\r\n                                        </Link>\r\n                                    </div>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        </CCardGroup>\r\n                    </CCol>\r\n                </CRow>\r\n            </CContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ login: { loading, user, loginState } }) => ({\r\n    loading,\r\n    user,\r\n    loginState,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}